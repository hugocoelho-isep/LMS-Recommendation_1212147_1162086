services:
    lmslendings_1:
        image: lmslendings:latest
        container_name: lmslendings1_in_lms_network
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8089:8080"
        environment:
            SPRING_PROFILES_ACTIVE: instance1,bootstrap
        networks:
            - lms_network
        volumes:
            - "uploaded_files_volume_1:/tmp"

    lmslendings_2:
        image: lmslendings:latest
        container_name: lmslendings2_in_lms_network
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8090:8080"
        environment:
            SPRING_PROFILES_ACTIVE: instance2,bootstrap
        networks:
            - lms_network
        volumes:
            - "uploaded_files_volume_2:/tmp"
#services:
#    lmsusers:
#        image: lmsusers:latest
#        container_name: users_in_lms_network
#        build:
#            context: .
#            dockerfile: Dockerfile
#        ports:
#            - "8084:8080"
#        depends_on:    # adopting database per-service, this might not be a common service
#            postgres_in_lms_network:
#                condition: service_healthy
#        environment:
#            SPRING_PROFILES_ACTIVE: instance1,bootstrap
#        networks:
#            - lms_network

#    postgres_in_lms_network:   # if the database is not a common service, this would be necessary
#        container_name: postgres_in_lms_network
#        image: postgres:latest
#        restart: always
#        ports:
#            - "5432:5432"
#        environment:
#            POSTGRES_DB: users_1
#            POSTGRES_USER: postgres
#            POSTGRES_PASSWORD: password
#        volumes:
#            - "postgres_volume:/var/lib/postgresql/data"
#        networks:
#            - lms_network
#        healthcheck:
#            test: [ "CMD", "pg_isready", "-U", "postgres" ]
#            interval: 10s
#            retries: 5
#            timeout: 5s

networks:
    lms_network:
        external: true

volumes:
    uploaded_files_volume_1:
    uploaded_files_volume_2: